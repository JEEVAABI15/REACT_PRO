pipeline {
    agent any
    tools {nodejs "NodeJS"}

    stages {
        stage('Checkout') {
            steps {
                git url: "https://github.com/JEEVAABI15/REACT_PRO.git", branch: "main"
            }
        }
        stage('Setup Environment') {
            steps {
                script {
                    // Verify Node.js and npm installation
                    sh 'node -v'
                    sh 'npm -v'
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    script {
                        def scannerHome = tool name: 'sonar-scanner'
                        sh """
                        ${scannerHome}/bin/sonar-scanner \
                        -Dsonar.projectKey=poc \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://192.168.129.137:9000 \
                        -Dsonar.login=sqp_fdbf1443db645facb60e8ec934f5558615a034ea
                        """
                    }
                }
            }
        }
        
        stage('Check SonarQube Task Status') {
            steps {
                script {
                    // Navigate to the correct directory using 'dir'
                    dir('.scannerwork') {
                        // Extract ceTaskId from the report-task.txt file
                        def ceTaskId = sh(script: "grep 'ceTaskId' report-task.txt | cut -d'=' -f2", returnStdout: true).trim()
                        
                        // Fetch the task status using the SonarQube API
                        def taskStatus = sh(script: "curl -u admin:sonar http://192.168.129.137:9000/api/ce/task?id=${ceTaskId}", returnStdout: true).trim()
                        
                        // Check the task status
                        if (taskStatus.contains('"status":"FAILED"')) {
                            error "SonarQube analysis failed!"
                        } else if (taskStatus.contains('"status":"SUCCESS"')) {
                            echo "SonarQube analysis passed!"
                        } else {
                            echo "SonarQube analysis is still in progress."
                        }
                    }
                }
            }
        }



        stage('Build and Serve') {
            steps {
                script {
                        sh 'npm install'
                        sh 'npm run build'
                        sh 'cp -r dist/* /var/www/html/'
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
